# -*- coding: utf-8 -*-
"""матстат1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1s9OXv0uLlhx2yVUGY0TkLw5YL65bu0jN

Лабораторная работа 1.
Вариант 10
Звонарева Е. Е. 408653
"""

# установим нужные библиотеки
import numpy as np
import matplotlib.pyplot as plt

n = 20 #объем выборки
selection = [3.75, 3.59, 3.68, 3.67, 4.69, 3.77, 3.79, 4.46, 4.1, 4.53, 3.65, 3.87, 4.1, 3.9, 3.58, 4.76, 3.95, 4.26, 3.52, 4.12] #выборка объема 20

# приближение математического ожидания
sum = 0
#найдем сумму элементов выборки
for i in selection:
    sum += i

m = sum/20 #мат ожидание по формуле (средне выборочная)
m_f = np.mean(selection) #проверим, используя встроенную функцию

print("Мат ожидание:", m)
print("Проверка:", m_f)

#приближение дисперсии
summ = 0
#найдем сумму
for i in selection:
    summ += (i - m)**2

d = summ/n #дисперсия по формуле (смещенная статистика)
d_f = np.var(selection) #проверим, используя встроенную функцию
d_s = summ/(n-1) #вычислим еще и несмещенную статистику

print("Дисперсия:", d)
print("Проверка:", d_f)

print("Несмещенная статистика:", d_s)

#построение вариационного ряда
v = selection[:] #
#сортировка по возрастанию
for i in range(n):
    for j in range(0, n-i-1):
        if v[j] > v[j + 1]:
            v[j], v[j + 1] = v[j + 1], v[j]

v_f = np.sort(selection) #проверим, используя встроенную функцию

print("Вариационный ряд:", v)
print("Проверка:", v_f)

#построение эмпирической функции - график
#функция, которая возвращает скачок
def e_f(x, v):
    count = 0
    for i in v:
        if i <= x:
            count += 1
    return count / n

#находим уникальные значения
unique = []
for i in v:
    if i not in unique:
        unique.append(i)

x_values = unique #по оси Оx будем откладывать уникальные значения выборки
y_values = [e_f(x, v) for x in x_values] #по оси Оy будем откладывать отношение скачка к количеству элементов в выборке

#рисуем график
plt.figure(figsize=(10, 6))
plt.step(x_values, y_values, where='post')
plt.xlabel("x")
plt.ylabel("F(x)")
plt.title("Эмпирическая функция распределения")
plt.grid()
plt.show()

#нахождение медианы
med = (v[9]+v[10])/2 #медиана по формуле
m_f = np.median(v) #проверим, используя встроенную функцию

print("Медиана:", med)
print("Проверка:", m_f)

"""Вывод:

В данной лабораторной работе была проведена работа с выборкой. А именно были найдены следующие величины:
- Математическое ожидание (приближенное), которое показывает среднее значение случайной величины; математическое ожидание приближенно равно средне выборочной
- Дисперсия (приближенная), которая показывает разброс данных вокруг среднего значения; дисперсия приближенно равна смещенной статистике;
- Вариационный ряд, который представляет собой выборку, в которой элементы распределены по возрастанию;
- Эмпирическая функция распределения, которая показывает частату событий для каждого уникального элемента, для нее был также построен график;
- Медиана, она является элементом из середины вариационного ряда.


"""